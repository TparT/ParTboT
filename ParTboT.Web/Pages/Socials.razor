@page "/socials"
@using MongoDB.Driver
@inject MongoCRUD db
@inject ThemeManager tm

<h3>Socials</h3>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table @tm.GetCurrentTheme()">
        <thead>
            <tr>
                <th>Channel name</th>
                <th>Channel URL</th>
                <th>Custom message</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                FollowingGuild instance = forecast.FollowingGuilds["745008583178977370"];

                @if (instance.IsEditing)
                {
                    <tr>
                        <td>@forecast.StreamerName</td>
                        <td><a href="@forecast.ChannelURL">Channel</a></td>
                        <td>
                            <input type="text" class="form-control" placeholder="Custom message to be sent along the alert" @bind="@instance.ChannelToSendTo.CustomMessage" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-link" @onclick="() => EnableEditing(false, instance)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                                </svg>
                            </button>
                            <button type="button" class="btn btn-link" @onclick="() => UpdateInstance(forecast._id, instance)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check" viewBox="0 0 16 16">
                                    <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@forecast.StreamerName</td>
                        <td><a href="@forecast.ChannelURL">Channel</a></td>
                        <td>@instance.ChannelToSendTo.CustomMessage</td>
                        <td>
                            <button type="button" class="btn btn-link" @onclick="() => EnableEditing(true, instance)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                    <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {

    private IEnumerable<TwitchStreamer>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await db.LoadAllRecordsAsync<TwitchStreamer>("Twitch Streamers")).Where(s => s.FollowingGuilds.Keys.Contains("745008583178977370"));
        tm.ThemeChanged += (() => StateHasChanged());
    }

    private void EnableEditing(bool flag, FollowingGuild instanceData)
    {
        instanceData.IsEditing = flag;
    }

    private async void UpdateInstance(string StreamerID, FollowingGuild instanceData)
    {
        EnableEditing(false, instanceData);
        IMongoCollection<TwitchStreamer> col = await db.GetCollectionAsync<TwitchStreamer>("Twitch Streamers");

        UpdateResult result =
            await col.UpdateOneAsync
                (Builders<TwitchStreamer>.Filter.Where
                (u => u._id == StreamerID & u.FollowingGuilds.Any(a => a.Key == instanceData.GuildIDToSend.ToString())),
                Builders<TwitchStreamer>.Update.Set("FollowingGuilds.$.v", instanceData));

    }
}
